// <auto-generated />
using EFCore.MigrationExtensions.SqlObjects;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestDataAccessLayer;

#nullable disable

namespace TestDataAccessLayer.Migrations
{
    [DbContext(typeof(TestContext))]
    partial class TestContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.Model.AddSqlObjects(new SqlObject[]
            {
                new("v_view_10", "create or replace view migr_ext_tests.v_view_10 as select * from migr_ext_tests.my_table;")
                {
                    Order = 10
                },
                new("v_view_2.sql", "create or replace view migr_ext_tests.name123_2 as \nselect * from migr_ext_tests.my_table;")
                {
                    Order = 2147483647
                },
                new("v_view.sql", "create or replace view migr_ext_tests.name123 as \nselect * from migr_ext_tests.my_table;")
                {
                    Order = 2147483647
                },
            });

            modelBuilder
                .HasDefaultSchema("migr_ext_tests")
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestDataAccessLayer.Class1", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.HasKey("Id");

                    b.ToTable("my_table", "migr_ext_tests");
                });
#pragma warning restore 612, 618
        }
    }
}
